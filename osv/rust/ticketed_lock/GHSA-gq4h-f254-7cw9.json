{
  "id": "GHSA-gq4h-f254-7cw9",
  "modified": "2023-06-13T21:53:00Z",
  "published": "2021-08-25T21:00:34Z",
  "summary": "Data races in ticketed_lock",
  "details": "Affected versions of this crate unconditionally implemented `Send` for `ReadTicket\u003cT\u003e` \u0026 `WriteTicket\u003cT\u003e`.\nThis allows to send non-Send `T` to other threads.\n\nThis can allows creating data races by cloning types with internal mutability and sending them to other threads (as `T` of `ReadTicket\u003cT\u003e`/`WriteTicket\u003cT\u003e`). Such data races can cause memory corruption or other undefined behavior.\n\nThe flaw was corrected in commit `a986a93` by adding `T: Send` bounds to `Send` impls of `ReadTicket\u003cT\u003e`/`WriteTicket\u003cT\u003e`.\n",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ticketed_lock",
        "purl": "pkg:cargo/ticketed_lock"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.3.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/08/GHSA-gq4h-f254-7cw9/GHSA-gq4h-f254-7cw9.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/kvark/ticketed_lock/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://github.com/kvark/ticketed_lock/commit/a986a9335d591fa5c826157d1674d47aa525357f"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0119.html"
    }
  ]
}