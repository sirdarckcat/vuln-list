{
  "id": "GHSA-9j8q-m9x5-9g6j",
  "modified": "2021-08-24T18:52:16Z",
  "published": "2021-08-25T20:59:11Z",
  "aliases": [
    "CVE-2020-36444"
  ],
  "summary": "Data races in async-coap",
  "details": "An issue was discovered in the async-coap crate through 2020-12-08 for Rust. \nAffected versions of this crate implement Send/Sync for `ArcGuard\u003cRC, T\u003e` with no trait bounds on `RC`. This allows users to send `RC: !Send` to other threads and also allows users to concurrently access `Rc: !Sync` from multiple threads.\n\nThis can result in memory corruption from data race or other undefined behavior caused by sending `T: !Send` to other threads (e.g. dropping `MutexGuard\u003cT\u003e` in another thread that didn't lock its mutex).\n",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "async-coap",
        "purl": "pkg:cargo/async-coap"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {}
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/08/GHSA-9j8q-m9x5-9g6j/GHSA-9j8q-m9x5-9g6j.json"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36444"
    },
    {
      "type": "WEB",
      "url": "https://github.com/google/rust-async-coap/issues/33"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/google/rust-async-coap"
    },
    {
      "type": "WEB",
      "url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/async-coap/RUSTSEC-2020-0124.md"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0124.html"
    }
  ]
}