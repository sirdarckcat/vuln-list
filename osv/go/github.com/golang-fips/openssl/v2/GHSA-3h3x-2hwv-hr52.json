{
  "id": "GHSA-3h3x-2hwv-hr52",
  "modified": "2024-10-02T18:31:32Z",
  "published": "2024-10-01T21:31:34Z",
  "aliases": [
    "CVE-2024-9355"
  ],
  "summary": "Golang FIPS OpenSSL has a Use of Uninitialized Variable vulnerability",
  "details": "A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack.",
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/golang-fips/openssl/v2",
        "purl": "pkg:golang/github.com/golang-fips/openssl/v2"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "last_affected": "2.0.3"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-3h3x-2hwv-hr52/GHSA-3h3x-2hwv-hr52.json"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-9355"
    },
    {
      "type": "WEB",
      "url": "https://access.redhat.com/errata/RHSA-2024:7502"
    },
    {
      "type": "WEB",
      "url": "https://access.redhat.com/security/cve/CVE-2024-9355"
    },
    {
      "type": "WEB",
      "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2315719"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/golang-fips/openssl"
    }
  ]
}