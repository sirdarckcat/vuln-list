{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-10-25T14:23:00Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "werkzeug"
  },
  "Advisory": {
    "DatabaseId": 223772,
    "Id": "GSA_kwCzR0hTQS1ocmZ2LW1xcDgtcTVyd84AA2oc",
    "GhsaId": "GHSA-hrfv-mqp8-q5rw",
    "References": [
      {
        "Url": "https://github.com/pallets/werkzeug/security/advisories/GHSA-hrfv-mqp8-q5rw"
      },
      {
        "Url": "https://github.com/pallets/werkzeug/commit/b1916c0c083e0be1c9d887ee2f3d696922bfc5c1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hrfv-mqp8-q5rw"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hrfv-mqp8-q5rw"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-46136"
      }
    ],
    "Description": "Werkzeug multipart data parser needs to find a boundary that may be between consecutive chunks. That's why parsing is based on looking for newline characters. Unfortunately, code looking for partial boundary in the buffer is written inefficiently, so if we upload a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer.\n\nThis allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-10-25T14:22:59Z",
    "Severity": "MODERATE",
    "Summary": "Werkzeug DoS: High resource usage when parsing multipart/form-data containing a large part with CR/LF character at the beginning",
    "UpdatedAt": "2023-10-25T14:23:00Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.0.1"
      },
      "VulnerableVersionRange": "\u003c= 3.0.0"
    }
  ]
}